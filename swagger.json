{
  "swagger": "2.0",
  "info": {
    "description": "Weblib technical test",
    "version": "1.0.0",
    "title": "Test technique Back JS - Weblib",
    "contact": {
      "email": "servant.nicolas@gamil.com"
    }
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "user",
      "description": "Actions on user ressource"
    },
    {
      "name": "book",
      "description": "Actions on book ressource"
    },
    {
      "name": "library",
      "description": "Actions on library ressource"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create a new user",
        "description": "This can be done by a guest login.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          }
        }
      }
    },
    "/users/:id": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get a user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The user id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The user id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Get all books",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          }
        }
      },
      "post": {
        "tags": [
          "book"
        ],
        "summary": "Create a new book",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created book object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created !"
          }
        }
      }
    },
    "/books/:id": {
      "get": {
        "tags": [
          "book"
        ],
        "summary": "Get a book",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The user id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        }
      },
      "put": {
        "tags": [
          "book"
        ],
        "summary": "Update a book",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The book id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated book object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          }
        }
      },
      "delete": {
        "tags": [
          "book"
        ],
        "summary": "Delete a book",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The book id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          }
        }
      }
    },
    "/libraries": {
      "get": {
        "tags": [
          "library"
        ],
        "summary": "Get all libraries",
        "responses": {
          "200": {
            "description": "Operation successfull",
            "schema": {
              "$ref": "#/definitions/Libraries"
            }
          }
        }
      },
      "post": {
        "tags": [
          "library"
        ],
        "summary": "Create a new library",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created book object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Library"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created !"
          }
        }
      }
    },
    "/libraries/:id": {
      "get": {
        "tags": [
          "library"
        ],
        "summary": "Get a library",
        "responses": {
          "200": {
            "description": "Operation successfull",
            "schema": {
              "$ref": "#/definitions/Library"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "library"
        ],
        "summary": "Delete a library",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The library id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          }
        }
      },
      "put": {
        "tags": [
          "library"
        ],
        "summary": "Update a library",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The library id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated library object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Library"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successfull"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "token": {
      "type": "apiKey",
      "name": "x-access-token",
      "in": "header"
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Order"
      }
    },
    "Library": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "Category"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Books": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Book"
      }
    },
    "Libraries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Library"
      }
    },
    "Users": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User"
      }
    }
  }
}